---
//HighlightPointAccordianItem.astro

import GenericSlider from '../components/GenericSlider.astro';
import { baseHost } from '../utils/utilities.ts';
const { highlight, modalId } = Astro.props;
---

<div id={`accordion-content-${highlight.id}`} class="accordion-content-placeholder">
    {
        highlight.sliderImage || highlight.related_highlight?.sliderImage ? (
            <div class="frame highlight-slider">
                <GenericSlider
                    sliderImageId={highlight.sliderImage || highlight.related_highlight?.sliderImage.id}
                    height={220}
                />
            </div>
        ) : (
            ''
        )
    }
    <div set:html={highlight.description || highlight.related_highlight?.description || ''} />

    {
        highlight.id && highlight.external_links && highlight.external_links.length > 0 ? (
            <>
                <div class="find-out-more">Find out more about {highlight.title}:</div>
                <div class="external-links-container">
                    {highlight.external_links.map((link: any, linkIndex: number) => (
                        <div class="external-link-item">
                            <a href={link.url} target="_blank" rel="noopener noreferrer" class="external">
                                <div class="thumbnail">
                                    <img
                                        src={baseHost + link.screenshot_small}
                                        alt={link.name || link.url}
                                        loading="lazy"
                                    />
                                </div>
                                <div class="link-text">{link.name || link.url}</div>
                            </a>
                        </div>
                    ))}
                </div>
            </>
        ) : (
            ''
        )
    }
</div>

<style>
    .accordion-content-placeholder {
        padding: 10px;
        /* border: 1px solid var(--bs-primary-light); */
        border-radius: 4px;
        background: #f8f9fa;
    }
    .find-out-more {
        margin-top: 20px;
        margin-bottom: 20px;
        color: var(--bs-primary-dark);
        border-bottom: 1px solid var(--bs-primary-dark);
    }
    .external-links-container {
        display: flex;
        flex-wrap: wrap;
        gap: 5px;
        justify-content: flex-start;
        padding: 5px;
    }
    .external-link-item {
        flex: 0 0 200px;
        max-width: 200px;
        display: flex;
        flex-direction: column;
        align-items: center;
        border: 1px solid var(--bs-primary);
        padding: 5px;
        box-sizing: border-box;
    }
    .external-link-item .thumbnail {
        width: 100%;
        margin-bottom: 5px;
    }
    .external-link-item .thumbnail img {
        width: 100%;
        height: auto;
        display: block;
        max-width: 200px;
    }
    .external-link-item .link-text {
        font-size: 1rem;
        text-align: left;
        word-break: break-word;
    }
    @media (max-width: 600px) {
        .external-link-item {
            flex: 0 0 150px;
            max-width: 150px;
        }
        .external-link-item .thumbnail img {
            max-width: 150px;
        }
        .external-link-item .link-text {
            font-size: 0.9rem;
        }
    }
    @media (max-width: 400px) {
        .external-link-item {
            flex: 0 0 100px;
            max-width: 100px;
        }
        .external-link-item .thumbnail img {
            max-width: 100px;
        }
        .external-link-item .link-text {
            font-size: 0.8rem;
        }
    }
</style>

<style lang="scss">
    @import '../styles/global.scss';
    :root {
        --highlight-color: var(--bs-primary);
    }

    .frame {
        max-width: 100%;
        height: auto;
    }

    .desc {
        flex-grow: 1;
    }

    .box-shadow {
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.15); /* More noticeable shadow */
    }

    .highlight-card {
        margin-bottom: 20px;
        padding: 10px;
        padding-bottom: 0px;
        background: var(--bs-base-background);
        //border: 1px solid var(--bs-border-light);
    }

    .frame {
        padding: 5px;
        border: 1px solid var(--bs-border-light);
    }

    .collapse {
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.5s ease; /* Adjust the duration as needed */
        display: none; /* Ensure it is hidden initially */
    }

    .collapse.show {
        max-height: 500px; /* Adjust this value to accommodate the maximum height of your content */
    }

    /* Specific button styling to mimic link appearance */
    .toggle-link {
        background: none;
        border: none;
        padding: 0;
        font: inherit;
        cursor: pointer;
        display: inline;
        color: var(--bs-link-color); /* Inherit link color */
        color: var(--bs-primary-dark); /* Inherit link color */
        text-decoration: inherit; /* Inherit link text decoration */
        padding-left: 5px;
    }

    .toggle-link:hover {
        color: var(--bs-link-hover-color); /* Change color on hover */
        text-decoration: none; /* Remove underline on hover */
    }

    .toggle-link:focus {
        outline: none; /* Remove outline on focus */
        color: var(--bs-primary); /* Change color on focus */
        text-decoration: none; /* Remove underline on focus */
    }

    .highlight-slider {
        // float: right;
        // margin-left: 20px;
        width: 100%;
        margin-bottom: 20px;
    }
    @include respond-to(small) {
        .highlight-slider {
            // float: right;
            display: block;
            width: 100%;
            margin-left: 0px;
            margin-bottom: 20px;
        }
    }
</style>
