---
const page = Astro.props.page;

// Pick the background image based on the page – the height is now handled in CSS.
let backgroundImage;
switch (page) {
    case 'adventures':
    case 'about':
        backgroundImage = '/assets/top_sliders/bg_long.jpg';
        break;
    // Add other cases as needed...
    default:
        backgroundImage = '/assets/top_sliders/bg_long.jpg';
        break;
}

// We now only set the background-image inline.
const inlineStyle = `background-image: url('${backgroundImage}'); background-repeat: repeat-x; overflow: hidden; position: relative; transition: background-position 0.5s ease;`;
---

<header class="bg-light">
    <div id="imageScrollContainer" class="image-scroll-container" style={inlineStyle}>
        <button id="scrollLeft" class="scroll-btn left"><i class="fas fa-chevron-left"></i></button>
        <button id="scrollRight" class="scroll-btn right"><i class="fas fa-chevron-right"></i></button>
    </div>
</header>

<style lang="scss">
    @import '../styles/global.scss';

    // Default slider styles (for viewport ≥992px)
    #imageScrollContainer {
        height: 193px;
        // Use the same aspect ratio as your original:
        background-size: 1902px 193px;
    }

    // // At the breakpoint below lg (less than 992px), change the height while preserving the aspect ratio.
    // @include media-breakpoint-down(lg) {
    //     #imageScrollContainer {
    //         height: 150px;
    //         // Compute new width: newWidth = 150px * (1902 / 193)
    //         background-size: calc(150px * 1902 / 193) 150px;
    //     }
    // }

    /* (The rest of your styles for buttons, etc. remain the same) */
    .scroll-btn {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background-color: rgba(0, 0, 0, 0.5);
        color: white;
        border: none;
        cursor: pointer;
        padding: 10px;
        border-radius: 5px;
        font-size: 20px;

        &.left {
            left: 10px;
        }

        &.right {
            right: 10px;
        }

        &:hover {
            background-color: rgba(0, 0, 0, 0.7);
        }
    }
</style>

<script>
    let currentPosition = 0;
    function updateBackgroundPosition() {
        const container = document.getElementById('imageScrollContainer');
        container!.style.backgroundPosition = `${currentPosition}px center`;
    }
    document.getElementById('scrollLeft')!.addEventListener('click', function () {
        currentPosition += 200;
        updateBackgroundPosition();
    });
    document.getElementById('scrollRight')!.addEventListener('click', function () {
        currentPosition -= 200;
        updateBackgroundPosition();
    });
</script>
