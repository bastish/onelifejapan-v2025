<!-- Contact Page Markup --><!-- Use a Bootstrap Card for the Form Container -->
<form id="contactForm" novalidate>
    <p class="mb-4">
        To enquire about a trip, please contact us via email or with the form below with the dates and type of itinerary
        you are interested in, as well as any other details that will help us design the perfect adventure for you.
    </p>
    <p class="text-center">
        <a
            href="mailto:tours@onelifejapan.com"
            title="Contact One Life Japan"
            class="font-weight-bold text-decoration-none">tours@onelifejapan.com</a
        >
    </p>

    <ul class="checklist" id="question-list">
        <li class="mb-2">Potential Dates?</li>
        <li class="mb-2">Participant Names, Ages &amp; General Desired Activity Level?</li>
        <li class="mb-2">Which itinerary on the site is closest to your goals?</li>
        <li class="mb-2">How long will you be in Japan before and after your trip with One Life Japan?</li>
        <li class="mb-2">What places will you visit before and after?</li>
        <li class="mb-2">How often/far do you walk, ride a bike or hike?</li>
        <li class="mb-2">Do you have any physical conditions/concerns you would like us to consider?</li>
        <li class="mb-2">Do you have any special requirements for accommodations?</li>
        <li>Do you have any specific dietary restrictions or allergies?</li>
    </ul>

    <!-- Contact Form -->
    <div class="form-group">
        <label for="name" class="sr-only">Your Name</label>
        <input type="text" class="form-control" name="name" id="name" placeholder="Your Name" required />
    </div>
    <div class="form-group">
        <label for="email" class="sr-only">Your Email</label>
        <input type="email" class="form-control" name="email" id="email" placeholder="Your Email" required />
    </div>
    <!-- Added Email Confirmation Field -->
    <div class="form-group">
        <label for="confirmEmail" class="sr-only">Confirm Your Email</label>
        <input
            type="email"
            class="form-control"
            name="confirmEmail"
            id="confirmEmail"
            placeholder="Confirm Your Email"
            required
        />
    </div>
    <div class="form-group">
        <label for="message" class="sr-only">Your Message</label>
        <textarea class="form-control" name="message" id="message" rows="15" placeholder="Your Message" required
        ></textarea>
    </div>
    <!-- Other form fields as needed -->

    <script>
        // Populate the textarea with the questions from the list and store the default content.
        document.addEventListener('DOMContentLoaded', () => {
            const questionList = document.getElementById('question-list');
            const textarea = document.getElementById('message') as HTMLFormElement;
            if (questionList && textarea) {
                const listItems = questionList.querySelectorAll('li');
                const questions = Array.from(listItems).map((item) => `* ${item.textContent?.trim()}`);
                const defaultContent = '\n\n\n' + questions.join('\n\n');
                textarea.value = defaultContent;
                // Store the default value on a data attribute for later comparison.
                textarea.dataset.defaultValue = defaultContent;
            }
        });
    </script>

    <!-- Honeypot field: hidden from users -->
    <div style="display:none;">
        <label for="honeypot">Leave this field blank</label>
        <input type="text" name="honeypot" id="honeypot" />
    </div>

    <button type="submit" class="btn btn-primary btn-block">Send</button>
</form>

<!-- Modal Markup (Bootstrap 5) -->
<div class="modal fade" id="errorModal" tabindex="-1" aria-labelledby="errorModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="errorModalLabel">Oops. Somethings Missing ¯\_(ツ)_/¯</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Error message injected here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Additional Custom Styles -->
<style lang="scss">
    @use '../styles/global' as *;
    /* Hide screen reader-only labels visually while keeping accessibility */
    .sr-only {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
        border: 0;
    }
    /* Slight padding adjustments for form groups */
    .form-group {
        margin-bottom: 1rem;
    }
    .btn {
        background: var(--bs-link-color);
    }
    @include respond-to(small) {
        .modal-title {
            font-size: 1.2em;
        }
    }
</style>

<!-- TypeScript for AJAX submission, reactive response, and content replacement -->
<script>
    declare const bootstrap: any;
    document.addEventListener('DOMContentLoaded', () => {
        const formRenderTime = Date.now();
        let userTyped = false;
        let userPasted = false;

        const formFields = document.querySelectorAll('#contactForm input, #contactForm textarea');
        formFields.forEach((field) => {
            field.addEventListener('input', () => {
                userTyped = true;
            });
            field.addEventListener('paste', () => {
                userPasted = true;
            });
        });

        // Helper function: Display error modal with the provided message.
        function showErrorModal(message: string) {
            const modalEl = document.getElementById('errorModal');
            if (modalEl) {
                const modalBody = modalEl.querySelector('.modal-body');
                if (modalBody) {
                    modalBody.textContent = message;
                }
                const errorModal = new bootstrap.Modal(modalEl);
                errorModal.show();
            }
        }

        const form = document.getElementById('contactForm') as HTMLFormElement;
        const responseContainer = document.getElementById('formResponse');
        const emailField = document.getElementById('email') as HTMLFormElement;
        const confirmEmailField = document.getElementById('confirmEmail') as HTMLFormElement;
        const messageField = document.getElementById('message') as HTMLFormElement;

        form.addEventListener('submit', async (event) => {
            event.preventDefault();

            // Email confirmation validation.
            const email = emailField.value.trim();
            const confirmEmail = confirmEmailField.value.trim();
            if (email !== confirmEmail) {
                showErrorModal('Error: Email addresses do not match.');
                return;
            }

            // Check that the message field has extra information.
            const currentMessage = messageField!.value.trim();
            const defaultMessage = messageField!.dataset.defaultValue?.trim();
            if (!userPasted && currentMessage === defaultMessage) {
                showErrorModal('Please fill in the message with additional information.');
                return;
            }

            const elapsedTime = (Date.now() - formRenderTime) / 1000;
            const formData = new FormData(form);
            formData.append('elapsedTime', elapsedTime.toString());
            formData.append('userTyped', userTyped ? 'true' : 'false');
            formData.append('userPasted', userPasted ? 'true' : 'false');

            try {
                const response = await fetch('https://my.onelifejapan.com/www/api/contact.php', {
                    method: 'POST',
                    body: formData,
                });
                const json = await response.json();
                if (response.ok && json.success) {
                    // Hide the form.
                    form.style.display = 'none';
                    // Remove the "hide-success" class so that the success message appears.
                    const successContainer = document.querySelector('.hide-success');
                    if (successContainer) {
                        successContainer.classList.remove('hide-success');
                    }
                    // Update the success message container with the response message.
                    const successDiv = document.getElementById('formResponse');
                    if (successDiv) {
                        successDiv.innerHTML = json.message;
                    }
                } else {
                    showErrorModal(json.message || 'Submission error. Please try again.');
                }
            } catch (error) {
                console.error('Error submitting form:', error);
                showErrorModal('An error occurred. Please try again later.');
            }
        });
    });
</script>
