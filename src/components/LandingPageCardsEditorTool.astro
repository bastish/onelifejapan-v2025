---
import { baseHost } from '../utils/utilities.ts';
---

<div class="editing-controls">
    <h3>Editing Card:</h3>
    <button id="edit-0" class="edit-button active">Card 1</button>
    <button id="edit-1" class="edit-button">Card 2</button>
    <button id="edit-2" class="edit-button">Card 3</button>
    <button id="save-set" class="save-button">Save This Trio</button>
</div>

<div class="thumbnail-scroll-container">
    <div class="thumbnail-grid" id="thumbnail-grid"></div>
</div>

<div class="save-controls">
    <textarea id="saved-json" readonly></textarea>
</div>
<script is:inline>
    document.addEventListener('DOMContentLoaded', async () => {
        // ðŸ›‘ Stop auto-scroll
        if (window._landingPageCardIntervals) {
            window._landingPageCardIntervals.forEach(clearInterval);
            window._landingPageCardIntervals = [];
            console.log('Auto-scroll stopped.');
        }

        const container = document.querySelector('.landing-page-cards');
        const baseHost = container?.dataset.baseHost || '';

        let imagePaths = [];
        try {
            const res = await fetch('/data/card-image-paths.json');
            imagePaths = await res.json();
        } catch (error) {
            console.error('Failed to fetch card image paths:', error);
            return;
        }

        const allImages = imagePaths.map((path) => baseHost + path);
        const thumbnailGrid = document.getElementById('thumbnail-grid');

        allImages.forEach((img, index) => {
            const thumb = document.createElement('img');
            thumb.src = img;
            thumb.className = 'thumbnail';
            thumb.dataset.img = img;
            thumb.dataset.index = index;
            thumb.alt = `Thumbnail ${index}`;
            thumb.width = 150;
            thumb.height = 150;
            thumb.style.objectFit = 'cover';

            thumb.addEventListener('click', () => {
                const imgEl = document.querySelector(`.image-container[data-card="${activeCard}"] img`);
                if (imgEl) {
                    imgEl.src = img;
                    assignedImages[activeCard] = img;
                    updateAllThumbnailStyles();
                }
            });

            thumbnailGrid.appendChild(thumb);
        });

        let activeCard = 0;
        const assignedImages = [null, null, null];

        document.querySelectorAll('.edit-button').forEach((btn, idx) => {
            btn.addEventListener('click', () => {
                activeCard = idx;
                document.querySelectorAll('.edit-button').forEach((b) => b.classList.remove('active'));
                btn.classList.add('active');
            });
        });

        document.getElementById('save-set').addEventListener('click', () => {
            if (assignedImages.includes(null)) {
                alert('Assign all three cards before saving.');
                return;
            }
            const savedJson = JSON.stringify(assignedImages, null, 2);
            document.getElementById('saved-json').value = savedJson;
        });

        function updateAllThumbnailStyles() {
            const usageMap = {};

            assignedImages.forEach((img) => {
                if (img) usageMap[img] = (usageMap[img] || 0) + 1;
            });

            document.querySelectorAll('.thumbnail').forEach((thumb) => {
                const imgSrc = thumb.dataset.img;
                const count = usageMap[imgSrc] || 0;

                thumb.classList.toggle('selected-once', count === 1);
                thumb.classList.toggle('selected-twice', count > 1);
            });
        }
    });
</script>

<style lang="scss">
    @use '../styles/global' as *;

    .editing-controls {
        margin: 20px 0;
        text-align: center;
    }
    .edit-button {
        margin: 0 5px;
        padding: 8px 12px;
        border: 1px solid #ccc;
        background: #f9f9f9;
        cursor: pointer;
    }
    .edit-button.active {
        background: #0070f3;
        color: #fff;
    }

    .save-controls {
        margin-top: 20px;
        text-align: center;
    }
    .save-button {
        padding: 10px 20px;
        background: green;
        color: white;
        border: none;
        cursor: pointer;
        margin-bottom: 10px;
    }
    #saved-json {
        width: 90%;
        height: 100px;
        margin-top: 10px;
        font-family: monospace;
        font-size: 0.9rem;
        display: block;
        margin-left: auto;
        margin-right: auto;
    }

    .thumbnail-scroll-container {
        max-height: 320px;
        overflow-y: auto;
        padding: 10px;
        border: 1px solid #ccc;
        margin-top: 20px;
    }

    .thumbnail-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
        gap: 10px;
    }

    .thumbnail {
        width: 100%;
        height: 100px;
        object-fit: cover;
        border: 2px solid transparent;
        cursor: pointer;
        opacity: 1;
        transition:
            opacity 0.3s,
            border-color 0.3s;
    }

    .thumbnail.selected-once {
        opacity: 0.5;
        border-color: transparent;
    }

    .thumbnail.selected-twice {
        opacity: 0.5;
        border-color: red;
    }
    .thumbnail {
        width: 100%;
        height: 100px;
        object-fit: cover;
        border: 2px solid transparent;
        cursor: pointer;
        opacity: 1;
        transition:
            opacity 0.3s,
            border-color 0.3s;
    }

    .thumbnail.selected-once {
        opacity: 0.5;
        border: 2px solid gray;
    }

    .thumbnail.selected-twice {
        opacity: 0.5;
        border: 2px solid red;
    }
</style>
